function [g] = gamfun_stirlingbernoulli(z,tol)
% function [g] = gamfun_stirlingbernoulli(z,tol)
% 
% Computes the Gamma function using a Stirling series, to a tolerance tol.
% 
% We require that |arg(z)|<pi-epsilon for this method to work.
% 
% Copyright John W. Pearson 2014


% State Bernoulli numbers, which are involved in the series
BerNos = [1.000000000000000,-0.500000000000000,0.166666666666667,0, ...
    -0.033333333333333,0,0.023809523809524,0,-0.033333333333333,0, ...
    0.075757575757575,0,-0.253113553113554,0,1.166666666666671,0,-7.092156862745155, ...
    0,54.971177944862056,0,-5.291242424242417e+002,0,6.192123188405845e+003,0,...
    -8.658025311355360e+004,0,1.425517166666672e+006,0,-2.729823106781637e+007,0,...
    6.015808739006457e+008,0,-1.511631576709228e+010,0,4.296146430611721e+011,0,...
    -1.371165520508847e+013,0,4.883323189735999e+014,0,-1.929657934194033e+016,0,...
    8.416930475736904e+017,0,-4.033807185406005e+019,0,2.115074863808239e+021,0,...
    -1.208662652229670e+023,0,7.500866746077126e+024,0,-5.038778101481153e+026,0,...
    3.652877648481912e+028,0,-2.849876930245164e+030,0,2.386542749968398e+032,0,...
    -2.139994925722574e+034,0,2.050097572347869e+036,0,-2.093800591134695e+038,0,...
    2.275269648846410e+040,0,-2.625771028624042e+042,0,3.212508210271880e+044,0,...
    -4.159827816679620e+046,0,5.692069548203693e+048,0,-8.218362941978714e+050,0,...
    1.250290432716732e+053,0,-2.001558323324903e+055,0,3.367498291536555e+057,0,...
    -5.947097050313747e+059,0,1.101191032362832e+062,0,-2.135525954525424e+064,0,...
    4.332889698664289e+066,0,-9.188552824167305e+068,0,2.034689677632994e+071,0,...
    -4.700383395803763e+073,0,1.131804344548474e+076,0,-2.838224957069505e+078,0,...
    7.406424897968204e+080,0,-2.009645480275766e+083,0,5.665717005080877e+085,0,...
    -1.658451115413717e+088,0,5.036885995049463e+090,0,-1.586146823765897e+093,0,...
    5.175674361754847e+095,0,-1.748892184021803e+098,0,6.116051999495571e+100,0,...
    -2.212277691270924e+103,0,8.272277679877599e+105,0,-3.195892511141776e+108,0,...
    1.275008222338862e+111,0,-5.250092308677741e+113,0,2.230181789424292e+116,0,...
    -9.768452193096103e+118,0,4.409836197845602e+121,0,-2.050857088646538e+124,0,...
    9.821443327979740e+126,0,-4.841260079821206e+129,0,2.455308880148253e+132,0,...
    -1.280692680408557e+135,0,6.867616710467330e+137,0,-3.784646858197184e+140,0,...
    2.142610125066686e+143,0,-1.245672713718453e+146,0,7.434578755100549e+148,0,...
    -4.553579530464512e+151,0,2.861211281686101e+154,0,-1.843772355203523e+157,0,...
    1.218115453622193e+160,0,-8.248218718532048e+162,0,5.722587793783715e+165,0,...
    -4.066853052506207e+168,0,2.959609206464423e+171,0];

% Initialise quantities
summand = 0;
seriessum = 0;

% Compute series
for n = 1:172
    summand(n) = BerNos(2*n+1)/(2*n)/(2*n-1)/z^(2*n-1);
    seriessum = seriessum+summand(n);
    % Convergence test
    if abs(summand(n))/abs(seriessum)<tol && abs(summand(n-1))/abs(seriessum)<tol
        break
    end
    if (n==172) % No convergence
        [' ' num2str(n) ' terms computed']
        logGamma = (z-0.5)*log(z)-z+0.5*log(2*pi)+seriessum;%+sum(summand);%sum;
        g = exp(logGamma);
        if imag(z)==0
            g = real(g);
        end
        return
    end
end

% Compute approximation of log of Gamma function using Stirling series
logGamma = (z-0.5)*log(z)-z+0.5*log(2*pi)+seriessum;

% Compute Gamma function
g = exp(logGamma);

% In case where z is real, Gamma function must itself be real
if imag(z)==0
    g = real(g);
end
